<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:viewModels="clr-namespace:AppLauncher.ViewModels"
                    xmlns:dd="urn:gong-wpf-dragdrop"
                    xmlns:converters="clr-namespace:AppLauncher.Infrastructure.Converters"
                    xmlns:fa5="http://schemas.fontawesome.com/icons/">

    <converters:ValueIsNotNullConverter x:Key="ValueIsNotNullConverter"/>
    <converters:ValueIsNullConverter x:Key="ValueIsNullConverter"/>
    <converters:BoolToIntConverter x:Key="BoolToIntConverter"/>
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

    <DataTemplate DataType="{x:Type viewModels:ShortcutCellViewModel}">
        <Grid>
            
            <Grid Width="90" Height="90">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Border  Tag="1" Background="Transparent" Margin="2"
                dd:DragDrop.IsDragSource="{Binding ShortcutViewModel1, Converter={StaticResource ValueIsNotNullConverter}}"
                dd:DragDrop.IsDropTarget="{Binding ShortcutViewModel1, Converter={StaticResource ValueIsNullConverter}}" 
                dd:DragDrop.DropHandler="{Binding}">
                    <ContentPresenter Content="{Binding ShortcutViewModel1}"/>
                </Border>

                <Border Grid.Row="0" Grid.Column="1" Tag="2" Background="Transparent" Margin="2"
                    dd:DragDrop.IsDragSource="{Binding ShortcutViewModel2, Converter={StaticResource ValueIsNotNullConverter}}"
                    dd:DragDrop.IsDropTarget="{Binding ShortcutViewModel2, Converter={StaticResource ValueIsNullConverter}}" 
                    dd:DragDrop.DropHandler="{Binding}">
                    <ContentPresenter Content="{Binding ShortcutViewModel2}"/>
                </Border>

                <Border Grid.Row="1" Grid.Column="0"  Tag="3" Background="Transparent" Margin="2"
                    dd:DragDrop.IsDragSource="{Binding ShortcutViewModel3, Converter={StaticResource ValueIsNotNullConverter}}"
                    dd:DragDrop.IsDropTarget="{Binding ShortcutViewModel3, Converter={StaticResource ValueIsNullConverter}}" 
                    dd:DragDrop.DropHandler="{Binding}">
                    <ContentPresenter Content="{Binding ShortcutViewModel3}"/>
                </Border>

                <Border Grid.Row="1" Grid.Column="1" Tag="4" Background="Transparent" Margin="2"
                            dd:DragDrop.IsDragSource="{Binding ShortcutViewModel4, Converter={StaticResource ValueIsNotNullConverter}}"
                            dd:DragDrop.IsDropTarget="{Binding ShortcutViewModel4, Converter={StaticResource ValueIsNullConverter}}" 
                            dd:DragDrop.DropHandler="{Binding}">
                    <ContentPresenter Content="{Binding ShortcutViewModel4}"/>
                </Border>

            </Grid>
            <Border Margin="2" CornerRadius="5" BorderBrush="Gray" BorderThickness="1" Background="#95636363" Name="Border">
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.IsSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </Border.Style>
                <Button HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Command="{Binding DeleteCommand}"
                        Visibility="{Binding ElementName=Border, Path=IsMouseOver, Converter={StaticResource BoolToVisibilityConverter}}">
                    <Button.Content>
                        <fa5:FontAwesome Margin="8" Icon="Solid_TrashAlt" Foreground="Red"/>
                    </Button.Content>
                </Button>
            </Border>
        </Grid>
    </DataTemplate>



    <DataTemplate DataType="{x:Type viewModels:ShortcutViewModel}">
        <Button Command="{Binding LaunchCommand}"
                ToolTip="{Binding Name}">
            <Button.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Крупный">
                        <MenuItem.Icon>
                            <fa5:FontAwesome Icon="Solid_Expand"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Мелкий">
                        <MenuItem.Icon>
                            <fa5:FontAwesome Icon="Solid_Compress"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator Margin="0,8,10,8"/>
                    <MenuItem Header="Переименовать">
                        <MenuItem.Icon>
                            <fa5:FontAwesome Icon="Solid_FileSignature"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Удалить">
                        <MenuItem.Icon>
                            <fa5:FontAwesome Foreground="Red" Icon="Solid_TrashAlt"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>
            <Image  Margin="5" Source="{Binding Image}"/>
        </Button>
    </DataTemplate>

</ResourceDictionary>